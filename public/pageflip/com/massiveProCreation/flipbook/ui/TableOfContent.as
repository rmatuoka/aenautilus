package com.massiveProCreation.flipbook.ui{	// IMPORtS	import com.greensock.TweenMax;	import com.greensock.easing.*;	import com.massiveProCreation.events.CustomEvent;	import com.massiveProCreation.flipbook.FlipBook;		import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.events.TimerEvent;	import flash.utils.Timer;
	public class TableOfContent extends Sprite	{		// VARIABLES		private var _source:Array = new Array();		private var _cb:ChooseBook;		private var _table:Sprite = new Sprite();		private var _colors:Object = new Object();						public function TableOfContent(array:Array, bgcolor:uint, bgalpha:Number, textcolor:uint)		{			// CONSTRUCTOR			super();			// here we read the atributes from the constructor and assignem to the variables, at the end we call a function to build table of content			_colors = {bgcolor:bgcolor, bgalpha:bgalpha, textcolor:textcolor};			_source = array;			buildTable();			this.addEventListener(Event.ADDED_TO_STAGE, added, false, 0, true);		}		private function added(e:Event):void{			stage.addEventListener(Event.RESIZE, onResize, false, 0, true);			this.addEventListener(Event.REMOVED_FROM_STAGE, removed, false, 0, true);			this.dispatchEvent(new CustomEvent(CustomEvent.ADJUST));		}				private function removed(e:Event):void {			stage.removeEventListener(Event.RESIZE, onResize);		}				private function onResize(e:Event):void {			this.dispatchEvent(new CustomEvent(CustomEvent.ADJUST));		}				private function buildTable():void {			// this function build a table of content for each object in the array we add event listeners set simple properties and assign 			// a ChooseBook propertie.			for(var i:int = 0; i < _source.length; i++){				if(i == 0)					_cb = new ChooseBook(String(_source[i].src), "table", _colors.bgcolor, _colors.bgalpha, _colors.textcolor);				else					_cb = new ChooseBook(String(_source[i].src), "bullet", _colors.bgcolor, _colors.bgalpha, _colors.textcolor);				_cb.mouseEnabled = true;				_cb.mouseChildren = false;								_cb.index = i;				if(i != 0){					_cb.buttonMode = true;					_cb.addEventListener(MouseEvent.CLICK, tableClick, false, 0, true);					_cb.addEventListener(MouseEvent.ROLL_OUT, bOut, false, 0, true);					_cb.addEventListener(MouseEvent.ROLL_OVER, bOver, false, 0, true);				}				_table.addChild(_cb);				_cb.y = 45 * i;			}			// at the end we add the button to the specific possition			this.addChild(_table);					}		public function callAdjust():void {			this.dispatchEvent(new CustomEvent(CustomEvent.ADJUST));		}		private function bOver(e:MouseEvent):void {			// roll over effect			TweenMax.to(e.target, 1, {alpha:0.7, ease:Expo.easeOut});		}		private function bOut(e:MouseEvent):void {			// roll out effect			TweenMax.to(e.target, 1, {alpha:1, ease:Expo.easeOut});		}				private function tableClick(e:MouseEvent):void {			// table click event handler, we call gotoPage function from the FlipBook object to redirect to the specific page.			this.mouseEnabled = false;			this.mouseChildren = false;			var timer:Timer = new Timer(1000, 1);			timer.addEventListener(TimerEvent.TIMER, onTimer, false, 0, true);			timer.start();			var fb:Object = this.parent.parent.parent;			FlipBook(fb).gotoPage(_source[e.target.index].number - 1, true);		}		private function onTimer(e:TimerEvent):void {			this.mouseEnabled = true;			this.mouseChildren = true;		}	}}