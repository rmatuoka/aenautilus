package com.massiveProCreation.utils.scroll{	import com.greensock.TweenMax;	import com.greensock.easing.*;		import flash.display.*;	import flash.events.*;	import flash.utils.Timer;		public class ScrollBar extends MovieClip	{		// this is the y offset of the scroll bar		private var yOffset:Number;		// y minimum of the scroll bar which is always 0		private var yMin:Number;		// y maximum of the scroll bar which depends from the length of the text		private var yMax:Number;		// this is timer for the up button it's trigered every 25ms, when user clicks the up arrow of the scroll bar		private var timerUp:Timer = new Timer(25);		// this is timer for the down button it's trigered every 25ms, when user click the down arrow of the scroll bar		private var timerDown:Timer = new Timer(25);				public function ScrollBar():void		{			// add timer events			this.addEventListener(Event.ADDED_TO_STAGE, added);			timerUp.addEventListener(TimerEvent.TIMER, scrollTimerUp, false, 0, true);			timerDown.addEventListener(TimerEvent.TIMER, scrollTimerDown, false, 0, true);		}				private function added(e:Event):void {			// setup the scroll bar and the properties of the classes 			yMin = 0;			yMax = track.width - thumb.width;			thumb.addEventListener(MouseEvent.MOUSE_DOWN, thumbDown);			track.addEventListener(MouseEvent.CLICK, trackClick);			track.buttonMode = true;			thumb.buttonMode = true;			// add mouse events			stage.addEventListener(MouseEvent.MOUSE_UP, thumbUp);			stage.addEventListener(Event.RESIZE, onResize);			stage.dispatchEvent(new Event(Event.RESIZE));		}		private function trackClick(e:MouseEvent):void {			var newX:Number = this.mouseX - (thumb.width * 0.5);						if(newX < yMin)				newX = yMin;			else if (newX > yMax)				newX = yMax;						TweenMax.to(thumb, 1, {x:newX, ease:Expo.easeOut, onUpdate:update });		}		private function update():void {			dispatchEvent(new ScrollBarEvent(thumb.x / yMax));		}		public function scrollTo(percent:Number){			if(percent == 0){				TweenMax.to(thumb, 0.1, {x:0, onComplete:update});			} else if (percent >= 1){				TweenMax.to(thumb, 0.1, {x:(track.width - thumb.width), onComplete:update});			} else {				TweenMax.to(thumb, 0.1, {x:(track.width  - thumb.width) * percent, onComplete:update});			}		}		private function onResize(e:Event):void {			// on resize function sets the y maximum value 			yMax = track.width - thumb.width;			// also we set the y minimum value 			thumb.x = yMin;			// finaly we dispatch the ScrollBarEvent			dispatchEvent(new ScrollBarEvent(thumb.x / yMax));		}		private function scrollUp(e:MouseEvent):void {			// this function handles the click event of the scrollUp button			thumb.x -= 2;			if(thumb.x <= yMin)				thumb.x = yMin;			if(thumb.x >= yMax)				thumb.x = yMax;			// at the end we start the timer and dispatch the ScrollBarEvent				dispatchEvent(new ScrollBarEvent(thumb.x / yMax));			timerUp.start();		}		private function scrollDown(e:MouseEvent):void {			// this fucntion handles the click event of the scrollDown button			thumb.x += 2;			if(thumb.x <= yMin)				thumb.x = yMin;			if(thumb.x >= yMax)				thumb.x = yMax;			// at the end we start the timer and dispatch the ScrollBarEvent				dispatchEvent(new ScrollBarEvent(thumb.x / yMax));			timerDown.start();		}		private function scrollTimerUp(e:TimerEvent):void {			// this function is called every 25ms when timerUp is running			thumb.x -= 2;			if(thumb.x <= yMin)				thumb.x = yMin;			if(thumb.x >= yMax)				thumb.x = yMax;			dispatchEvent(new ScrollBarEvent(thumb.x / yMax));		}		private function scrollTimerDown(e:TimerEvent):void {			// this function is called every 25ms when timerDown is running			thumb.x += 2;			if(thumb.x <= yMin)				thumb.x = yMin;			if(thumb.x >= yMax)				thumb.x = yMax;			dispatchEvent(new ScrollBarEvent(thumb.x / yMax));		}		private function thumbDown(e:MouseEvent):void		{			// this function is called then the track of the scroll bar is clicked			stage.addEventListener(MouseEvent.MOUSE_MOVE, thumbMove);			yOffset = mouseX - thumb.x;			yMax = track.width - thumb.width;			}		private function thumbUp(e:MouseEvent):void		{			// this function is called when the track of the scroll bar is up 			if(timerUp.running)				timerUp.stop();			if(timerDown.running)				timerDown.stop();								if(stage != null)				stage.removeEventListener(MouseEvent.MOUSE_MOVE, thumbMove);		}		private function thumbMove(e:MouseEvent):void		{			// this function is called when track of the scroll bar is being moved			thumb.x = mouseX - yOffset;			if(thumb.x <= yMin)				thumb.x = yMin;			if(thumb.x >= yMax)				thumb.x = yMax;			dispatchEvent(new ScrollBarEvent(thumb.x / yMax));			e.updateAfterEvent();		}	}}